<style>
option:hover{
    background-color: red;
}
</style>
<div class="flex justify-center h-full p-3">
    <div class="select-container w-1/3 p-5 flex flex-col justify-center gap-10">
        <h3 class="text-5xl font-bold">Wybierz interesujące Cię <span class="text-basered">dane</span>, które zostaną zaprezentowane na <span class="text-basered">mapie</span></h3>
        <select id="heatMapOptions" class="w-full text-2xl bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-darkred focus:border-darkred block p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
            <option selected>Wybierz dane mapy</option>
            <option value="live">Informacje na żywo</option>
            <option value="predict">Przewidywania pożarów</option>
            <option value="warn">Obszary zagrożenia</option>
        </select>
    </div>
    <div class="w-2/3 rounded-xl" style="height: 800px;" id="map"></div>
</div>
<script src="scripts/leaflet-heat.js"></script>
<script src="scripts/points-live.js"></script>
<script src="scripts/points-historical-1.js"></script>
<script>var map = L.map("map").setView([50.067, 22.22], 5);
function getPolygonStyle(feature) {
    var confidence = feature.properties.confidence;
    var color = 'green';

    if (confidence >= 20) {
        color = 'red';
    } else if (confidence >= 8) {
        color = 'orange';
    } 

    return {
        fillColor: color,
        color: color,
        weight: 1,
        fillOpacity: 0.7
    };
}

    L.tileLayer("https://tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 20,
      minZoom: 5,
      attribution:
        '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
    }).addTo(map);

    let heatLayer;

var cityData1 = [
    [48.8566, 2.3522, 0.4],   // Paris, France
    [51.5074, -0.1278, 0.3],  // London, United Kingdom
    [41.9028, 12.4964, 0.7],  // Rome, Italy
    [52.5200, 13.4050, 0.3],  // Berlin, Germany
    [48.2100, 16.3636, 0.5],  // Vienna, Austria
    [52.3676, 4.9041, 0.1],   // Amsterdam, Netherlands
    [41.3851, 2.1734, 0.3],   // Barcelona, Spain
    [38.7223, -9.1393, 0.4],  // Lisbon, Portugal
    [50.8503, 4.3517, 0.5],   // Brussels, Belgium
    [55.7558, 37.6176, 0.6],   // Moscow, Russia
    [33.6844, -117.8265, 0.8],  // Irvine, USA
    [37.3541, -121.9552, 0], // San Jose, USA
    [32.7157, -117.1611, 0.1],  // San Diego, USA
    [34.0522, -118.2437, 0.2],  // Los Angeles, USA
    [37.7749, -122.4194, 0.3],  // San Francisco, USA
    [48.8588, 2.3470, 0.4],     // Montmartre, France
    [51.0450, 13.7373, 0.5],    // Dresden, Germany
    [50.9375, 6.9603, 0.6],     // Cologne, Germany
    [45.75, 4.85, 0.7],         // Lyon, France
    [52.5200, 4.9041, 0.8],      // Amsterdam, Netherlands
    [40.7128, -74.0060, 0.9],   // New York City, USA
    [34.0522, -118.2437, 1],  // Los Angeles, USA
    [37.7749, -122.4194, 0.1],  // San Francisco, USA
    [35.6895, 139.6917, 0.2],   // Tokyo, Japan
    [41.9028, 12.4964, 0.3],    // Vatican City
    [55.7558, 37.6176, 0.4],    // Moscow, Russia
    [48.8566, 2.3522, 0.5],     // Paris, France
    [51.5074, -0.1278, 0.6],    // London, United Kingdom
    [41.9028, 12.4964, 0.7],    // Rome, Italy
    [52.5200, 13.4050, 0.8]     // Berlin, Germany
];


function updateHeatData(selectedOption){
    let selectedData;
    if(selectedOption == "live"){
        selectedData = pointsLive;
    }else if(selectedOption == "predict"){
        selectedData = pointsHistorical;
    }else if(selectedOption == "warn"){
        selectedData = cityData1;
    }

    if (heatLayer) {
            map.removeLayer(heatLayer);
        }


    heatLayer = L.heatLayer(selectedData, {
    radius: 15, // Increase the radius to make points more intense,
    blur: 15,
    minOpacity: 0.4,
    gradient: {0.1: 'blue', 0.3: 'lime', 0.6: 'red'}
}).addTo(map);
}

heatLayer = L.heatLayer(pointsLive, {
    radius: 15, // Increase the radius to make points more intense,
    blur: 15,
    minOpacity: 0.4,
    gradient: {0.1: 'blue', 0.3: 'lime', 0.6: 'red'}
}).addTo(map);

const heatMapOptions = document.getElementById('heatMapOptions');
heatMapOptions.addEventListener("change", function () {
    let selectedOption = heatMapOptions.value;
    updateHeatData(selectedOption);
});
</script>